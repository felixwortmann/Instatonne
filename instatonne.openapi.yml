info:
  title: Instatonne
  description: Instagram, aber f√ºr die Tonne
  license:
    name: Apache 2.0
    url: https://github.com/OAI/OpenAPI-Specification/blob/master/https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
openapi: "3.0.3"
tags:
  - name: posts
  - name: users
paths:
  "/p":
    get:
      summary: Returns a list of posts.
      operationId: getPosts
      tags:
        - posts
      responses:
        "200":
          description: Successfully retrieved posts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
    post:
      summary: Create a new.
      operationId: createPost
      tags:
        - posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPost"
      responses:
        "200":
          description: Successfully created post.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
  "/p/{postId}":
    get:
      summary: Returns a single post by id.
      operationId: getPostById
      tags:
        - posts
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: The post id in uuid format
      responses:
        "200":
          description: Successfully retrieved post.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "404":
          $ref: "#/components/responses/NotFound"
  "/p/{postId}/i.jpg":
    get:
      summary: Returns the image of a post.
      operationId: getPostImageById
      tags:
        - posts
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: The post id in uuid format
      responses:
        "200":
          description: Successfully retrieved image.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        "404":
          $ref: "#/components/responses/NotFound"
  "/u/{username}":
    get:
      summary: Returns a single user by username.
      operationId: getUserByName
      tags:
        - users
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The user's username.
      responses:
        "200":
          description: Successfully retrieved user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
components:
  schemas:
    User:
      properties:
        username:
          type: string
        profileDescription:
          type: string
        created:
          type: string
          format: date-time
        followerCount:
          type: integer
        followingCount:
          type: integer
    Post:
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
        author:
          type: string
        imageUrl:
          type: string
        likeCount:
          type: integer
        comments:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
    NewPost:
      properties:
        text:
          type: string
        image:
          description: A base64 encoded version of the image in jpg format
          type: string
          format: base64

    Comment:
      properties:
        created:
          type: string
          format: date-time
        author:
          type: string
        comment:
          type: string
  responses:
    NotFound:
      description: The specified resource was not found.
